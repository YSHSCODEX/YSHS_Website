# Generated by Django 5.1 on 2024-08-28 14:21

import django.contrib.auth.models
import django.contrib.auth.validators
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('grade', models.IntegerField(choices=[(1, '1st grade'), (2, '2st grade'), (3, '3st grade')], verbose_name='학년')),
                ('classNum', models.IntegerField(choices=[(1, 'class 1'), (2, 'class 2'), (3, 'class 3'), (4, 'class 4'), (5, 'class 5'), (6, 'class 6'), (7, 'class 7'), (8, 'class 8'), (9, 'class 9')], verbose_name='반')),
                ('studentNum', models.IntegerField(choices=[(1, 'number 1'), (2, 'number 2'), (3, 'number 3'), (4, 'number 4'), (5, 'number 5'), (6, 'number 6'), (7, 'number 7'), (8, 'number 8'), (9, 'number 9'), (10, 'number 10'), (11, 'number 11'), (12, 'number 12'), (13, 'number 13'), (14, 'number 14'), (15, 'number 15'), (16, 'number 16'), (17, 'number 17'), (18, 'number 18'), (19, 'number 19'), (20, 'number 20'), (21, 'number 21'), (22, 'number 22'), (23, 'number 23'), (24, 'number 24'), (25, 'number 25'), (26, 'number 26'), (27, 'number 27'), (28, 'number 28'), (29, 'number 29'), (30, 'number 30'), (31, 'number 31'), (32, 'number 32'), (33, 'number 33'), (34, 'number 34'), (35, 'number 35'), (36, 'number 36'), (37, 'number 37'), (38, 'number 38'), (39, 'number 39')], verbose_name='출석번호')),
                ('birthDate', models.DateField(verbose_name='생년월일')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, unique=True, verbose_name='개인 이메일 주소')),
                ('groups', models.ManyToManyField(blank=True, related_name='customuser_set', to='auth.group')),
                ('user_permissions', models.ManyToManyField(blank=True, related_name='customuser_set', to='auth.permission')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
